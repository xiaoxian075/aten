<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.admin.dao.PayCardQuotaDaoMapper">
    <resultMap id="BaseResultMap" type="com.admin.model.PayCardQuota">
        <result column="sys_id" property="sysId" jdbcType="DECIMAL" />
        <result column="quota_name" property="quotaName" jdbcType="VARCHAR" />
        <result column="quota_type" property="quotaType" jdbcType="DECIMAL" />
        <result column="card_type" property="cardType" jdbcType="DECIMAL" />
        <result column="quota_one" property="quotaOne" jdbcType="DECIMAL" />
        <result column="quota_day" property="quotaDay" jdbcType="DECIMAL" />
        <result column="quota_month" property="quotaMonth" jdbcType="DECIMAL" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <select id="selectYunIdPayCount" resultType="java.util.HashMap" parameterType="java.util.HashMap">
        select (
            select sum(total_fee) as day_total_fee  From t_order
            where    to_char(pay_time,'yyyy-mm-dd') = to_char(sysdate,'yyyy-mm-dd')
            and      counter_fee = 0
            and      merchant_yun_id = #{merchantYunId,jdbcType=VARCHAR}
            and      card_type =  #{cardType,jdbcType=VARCHAR}
            and      pay_state = 1
            group by to_char(pay_time,'yyyy-mm-dd')
        ) as day_total_fee ,
        (
            select sum(total_fee) as month_total_fee  From t_order
            where    to_char(pay_time,'yyyy-mm') = to_char(sysdate,'yyyy-mm')
            and      counter_fee = 0
            and      merchant_yun_id = #{merchantYunId,jdbcType=VARCHAR}
            and      card_type =  #{cardType,jdbcType=VARCHAR}
            and      pay_state = 1
            group by to_char(pay_time,'yyyy-mm')
        ) as month_total_fee
        from dual
    </select>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.admin.model.BaseExample">
        select
        *
        from t_pay_card_quota
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExampleAndPage" parameterType="com.admin.model.BaseExample"  resultMap="BaseResultMap">
        select
        *
        from t_pay_card_quota
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <insert id="insertSelective" parameterType="com.admin.model.BaseExample" >
        insert into t_pay_card_quota
        <selectKey keyProperty="sysId" resultType="String" order="BEFORE">
            select t_pay_card_quota_SEQUENCE.nextval from dual
        </selectKey>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sysId != null">
                sys_id,
            </if>
            <if test="quotaName != null">
                quota_name,
            </if>
            <if test="quotaType != null">
                quota_type,
            </if>
            <if test="cardType != null">
                card_type,
            </if>
            <if test="quotaOne != null">
                quota_one,
            </if>
            <if test="quotaDay != null">
                quota_day,
            </if>
            <if test="quotaMonth != null">
                quota_month,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sysId != null">
                #{sysId,jdbcType=DECIMAL},
            </if>
            <if test="quotaName != null">
                #{quotaName,jdbcType=VARCHAR},
            </if>
            <if test="quotaType != null">
                #{quotaType,jdbcType=DECIMAL},
            </if>
            <if test="cardType != null">
                #{cardType,jdbcType=DECIMAL},
            </if>
            <if test="quotaOne != null">
                #{quotaOne,jdbcType=DECIMAL},
            </if>
            <if test="quotaDay != null">
                #{quotaDay,jdbcType=DECIMAL},
            </if>
            <if test="quotaMonth != null">
                #{quotaMonth,jdbcType=DECIMAL},
            </if>

        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.admin.model.BaseExample">
        update t_pay_card_quota
        <set>
            <if test="sysId != null">
                sys_id= #{sysId,jdbcType=DECIMAL},
            </if>
            <if test="quotaName != null">
                quota_name= #{quotaName,jdbcType=VARCHAR},
            </if>
            <if test="quotaType != null">
                quota_type= #{quotaType,jdbcType=DECIMAL},
            </if>
            <if test="cardType != null">
                card_type= #{cardType,jdbcType=DECIMAL},
            </if>
            <if test="quotaOne != null">
                quota_one= #{quotaOne,jdbcType=DECIMAL},
            </if>
            <if test="quotaDay != null">
                quota_day= #{quotaDay,jdbcType=DECIMAL},
            </if>
            <if test="quotaMonth != null">
                quota_month= #{quotaMonth,jdbcType=DECIMAL},
            </if>
        </set>
        where order_number = #{orderNumber,jdbcType=VARCHAR}
    </update>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
        delete from t_pay_card_quota
        where sys_id = #{sysIid,jdbcType=VARCHAR}
    </delete>
</mapper>