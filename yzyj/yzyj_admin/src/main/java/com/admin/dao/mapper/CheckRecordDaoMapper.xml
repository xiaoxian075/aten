<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.admin.dao.CheckRecordDaoMapper">
    <resultMap id="BaseResultMap" type="com.admin.model.CheckRecord">
        <result column="ID" property="id" jdbcType="DECIMAL" />
        <result column="ORDER_NUM" property="orderNum" jdbcType="DECIMAL" />
        <result column="YP_ORDER_NUM" property="ypOrderNum" jdbcType="DECIMAL" />
        <result column="ACCOUNT_COUNT" property="accountCount" jdbcType="DECIMAL" />
        <result column="YP_ACCOUNT_COUNT" property="ypAccountCount" jdbcType="DECIMAL" />
        <result column="CHECK_DATE" property="checkDate" jdbcType="TIMESTAMP" />
        <result column="LKL_CHECK_STATUS" property="lklCheckStatus" jdbcType="DECIMAL" />
        <result column="YP_CHECK_STATUS" property="ypCheckStatus" jdbcType="DECIMAL" />
        <result column="CHECK_UNIQUE" property="checkUnique" jdbcType="VARCHAR" />
        <result column="LKL_CHECK_RESULT" property="lklCheckResult" jdbcType="VARCHAR" />
        <result column="YP_CHECK_RESULT" property="ypCheckResult" jdbcType="VARCHAR" />
        <result column="CHECK_DAY" property="checkDay" jdbcType="VARCHAR" />
    </resultMap>
   <resultMap id="BaseResultMap1" type="com.admin.model.InComeRecord">
        <result column="ID" property="id" jdbcType="DECIMAL" />
        <result column="MONEY" property="money" jdbcType="DECIMAL" />
        <result column="AGENT_UNIQUE" property="agentUnique" jdbcType="DECIMAL" />
        <result column="TIME" property="time" jdbcType="TIMESTAMP" />
        <result column="REALNAME" property="agentName" jdbcType="VARCHAR" />
        <result column="YUNPAYLOGINNAME" property="agentYPLoginName" jdbcType="VARCHAR" />
        <result column="CHECKDAY" property="checkDay" jdbcType="VARCHAR" />
        <result column="TYPE" property="type" jdbcType="VARCHAR" />
        <result column="AGENT_MONTH_COUNT" property="agentMonthCount" jdbcType="DECIMAL" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <select id="selectByExampleAndPage" parameterType="com.admin.model.BaseExample"  resultMap="BaseResultMap">
        select
        *
        from T_CHECK_ORDER_RECORD
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByExampleAndPage1" parameterType="com.admin.model.BaseExample"  resultMap="BaseResultMap1">
        select
        t.ID,
        t.MONEY,
        t.AGENT_UNIQUE,
        t.TIME,
        t.CHECKDAY,
        t.TYPE,
        z.REALNAME,
        z.YUNPAYLOGINNAME
        from T_AGENT_INCOME_RECORD t left join Z_AGENCY_PERSON z on t.AGENT_UNIQUE = z.AGENT_UNIQUE
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="getCheckRecordByDay" parameterType="com.admin.model.CheckRecord" resultType="com.admin.model.CheckRecord">
        select * from T_CHECK_ORDER_RECORD t
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>


    <select id="getInComeRecordDay" parameterType="java.util.HashMap" resultMap="BaseResultMap1">
        SELECT  * FROM T_AGENT_INCOME_RECORD t where t.CHECKDAY = #{day}
        <if test="agentUnique != null">
            and t.AGENT_UNIQUE = #{agentUnique}
        </if>
        order by t.CHECKDAY DESC
    </select>

    <select id="getInComeRecordMonth" parameterType="java.util.HashMap" resultMap="BaseResultMap1">
        select "NVL"(sum(t.MONEY),0) as AGENT_MONTH_COUNT,AGENT_UNIQUE from T_AGENT_INCOME_RECORD t where 1=1
         <if test="month != null">
             and substr(t.CHECKDAY,1,7) = '${month}'
         </if>
        <if test="agentUnique != null">
            and t.AGENT_UNIQUE = #{agentUnique}
        </if>
        <if test="type != null">
            and t.type = #{type}
        </if>
         GROUP BY t.AGENT_UNIQUE
    </select>

    <select id="searchInComeList" parameterType="com.admin.model.InComeRecord" resultMap="BaseResultMap1">
        select o.*,z.REALNAME,z.YUNPAYLOGINNAME from T_AGENT_INCOME_RECORD o ,  Z_AGENCY_PERSON z WHERE 1=1
        <if test="agentYPLoginName != null and agentYPLoginName != ''">
            AND z.YUNPAYLOGINNAME= #{agentYPLoginName}
        </if>
        <if test="sdate != null and sdate != ''">
            AND to_date(o.CHECKDAY,'yyyy-mm-dd') &gt;= #{sdate}
        </if>
        <if test="edate != null and edate != ''">
            AND to_date(o.CHECKDAY,'yyyy-mm-dd') &lt;= #{edate}
        </if>
        <if test="agentName != null and agentName != ''">
            AND z.REALNAME= #{agentName}
        </if>
        <if test="type != null and type != ''">
            AND o.TYPE= #{type}
        </if>
        AND o.AGENT_UNIQUE = z.AGENT_UNIQUE order by o.CHECKDAY desc
    </select>

</mapper>