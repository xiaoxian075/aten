<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.aten.dao.AccountIntegralLogDao">

	<!-- 数据库映射模型区域 -->
	<resultMap id="resultAccountIntegralLog" type="com.aten.model.orm.AccountIntegralLog">
		<result property="id" column="id" />
		<result property="create_time" column="create_time" />
		<result property="account_id" column="account_id" />
		<result property="integral" column="integral" />
		<result property="type" column="type" />
		<result property="state" column="state" />
		<result property="io_type" column="io_type" />

	</resultMap>

	<!-- 新增数据区域 -->
	<sql id="insertCommon">
		INSERT INTO t_account_integral_log
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null"> id,</if>
			create_time,
			<if test="account_id != null"> account_id,</if>
			<if test="integral != null"> integral,</if>
			<if test="type != null"> type,</if>
			<if test="state != null"> state,</if>
			<if test="io_type != null"> io_type</if>

		</trim>
		<trim prefix="VALUES (" suffix=")" suffixOverrides=",">
			<if test="id != null">#{id},</if>
			now(),
			<if test="account_id != null">#{account_id},</if>
			<if test="integral != null">#{integral},</if>
			<if test="type != null">#{type},</if>
			<if test="state != null">#{state},</if>
			<if test="io_type != null">#{io_type}</if>

		</trim>
	</sql>

	<insert id="insert" parameterType="com.aten.model.orm.AccountIntegralLog">
		<include refid="insertCommon" />
	</insert>

	<insert id="insertGetPk" parameterType="com.aten.model.orm.AccountIntegralLog">
		<include refid="insertCommon" />
		<selectKey resultType="String" order="AFTER" keyProperty="id">
			SELECT @@IDENTITY AS ID
		</selectKey>
	</insert>

	<!-- 更新数据区域 -->
	<sql id="update_clause">
		<set>
			<trim suffixOverrides=",">
				<if test="id != null"> id = #{id}, </if>
				<if test="create_time != null"> create_time = #{create_time}, </if>
				<if test="account_id != null"> account_id = #{account_id}, </if>
				<if test="integral != null"> integral = #{integral}, </if>
				<if test="type != null"> type = #{type}, </if>
				<if test="state != null"> state = #{state}, </if>
				<if test="io_type != null"> io_type = #{io_type} </if>

			</trim>
		</set>
	</sql>





	<update id="update" parameterType="com.aten.model.orm.AccountIntegralLog">
		UPDATE t_account_integral_log
		<include refid="update_clause" />
		WHERE id = #{id}
	</update>

	<!-- 删除数据区域 -->
	<delete id="delete" parameterType="String">
		delete from t_account_integral_log where id in
		<foreach item="idItem" collection="array" index="index" open="("
			separator="," close=")">
			#{idItem}
		</foreach>
	</delete>

	<!-- 获取对象数据区域 -->
	<select id="get" parameterType="String" resultMap="resultAccountIntegralLog">
		SELECT
		t.id,t.create_time,t.account_id,t.integral,t.type,t.state,t.io_type
		FROM t_account_integral_log t WHERE id = #{id}
	</select>

	<!-- 搜索数据区域 -->
	<sql id="where_clause">
		<where>
			1=1
			<if test="id != null"> and t.id = #{id} </if>
			<if test="id_vague != null"> and instr(t.id,#{id_vague})>0 </if>
			<if test="create_time != null"> and t.create_time = #{create_time} </if>
			<if test="create_time_vague != null"> and instr(t.create_time,#{create_time_vague})>0 </if>
			<if test="account_id != null"> and t.account_id = #{account_id} </if>
			<if test="account_id_vague != null"> and instr(t.account_id,#{account_id_vague})>0 </if>
			<if test="integral != null"> and t.integral = #{integral} </if>
			<if test="integral_vague != null"> and instr(t.integral,#{integral_vague})>0 </if>
			<if test="type != null"> and t.type = #{type} </if>
			<if test="type_vague != null"> and instr(t.type,#{type_vague})>0 </if>
			<if test="state != null"> and t.state = #{state} </if>
			<if test="state_vague != null"> and instr(t.state,#{state_vague})>0 </if>
			<if test="io_type != null"> and t.io_type = #{io_type} </if>
			<if test="io_type_vague != null"> and instr(t.io_type#{io_type_vague})>0 </if>

		</where>
	</sql>

	<sql id="getCommon">
		select
		t.id,t.create_time,t.account_id,t.integral,t.type,t.state,t.io_type
		from t_account_integral_log t
		<include refid="where_clause" />
		order by id desc
	</sql>



	<select id="getList" parameterType="map" resultMap="resultAccountIntegralLog">
		<include refid="getCommon" />
		<if test="start != null">
			LIMIT ${start},${limit}
		</if>
	</select>

	<select id="getCount" parameterType="map" resultType="int">
		select count(*) ct from t_account_integral_log t
		<include refid="where_clause" />
	</select>


	<!-- 排序区域 -->
	<update id="updateBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index"
			separator=";">
			update t_account_integral_log
			<set>
				sort_no = #{item.sort_no}
			</set>
			WHERE id = #{item.id}
		</foreach>
	</update>

</mapper>

