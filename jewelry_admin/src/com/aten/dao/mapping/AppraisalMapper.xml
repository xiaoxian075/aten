<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.aten.dao.AppraisalDao">
	
	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/> 

	<!-- 数据库映射模型区域 -->
	<resultMap id="resultAppraisal" type="com.aten.model.orm.Appraisal">
		<result property="appraisal_id" column="appraisal_id" />
		<result property="appraisal_name" column="appraisal_name" />
		<result property="the_area" column="the_area" />
		<result property="appraisal_contacts" column="appraisal_contacts" />
		<result property="contacts_way" column="contacts_way" />
		<result property="sort_no" column="sort_no" />
		<result property="state" column="state" />
		<result property="create_time" column="create_time" />
		<result property="note" column="note" />
	</resultMap>

	<!-- 新增数据区域 -->
	<sql id="insertCommon">
		INSERT INTO t_appraisal(
		<if test="appraisal_id != null"> appraisal_id,</if>
		<if test="appraisal_name != null"> appraisal_name,</if>
		<if test="the_area != null"> the_area,</if>
		<if test="appraisal_contacts != null"> appraisal_contacts,</if>
		<if test="contacts_way != null"> contacts_way,</if>
		<if test="sort_no != null"> sort_no,</if>
		<if test="state != null"> state,</if>
		<if test="note != null"> note,</if>
		create_time
		)
		VALUES(
		<if test="appraisal_id != null">#{appraisal_id},</if>
		<if test="appraisal_name != null">#{appraisal_name},</if>
		<if test="the_area != null">#{the_area},</if>
		<if test="appraisal_contacts != null">#{appraisal_contacts},</if>
		<if test="contacts_way != null">#{contacts_way},</if>
		<if test="sort_no != null">#{sort_no},</if>
		<if test="state != null">#{state},</if>
		<if test="note != null">#{note},</if>
		now()
		)
	</sql>

	<insert id="insert" parameterType="com.aten.model.orm.Appraisal">
		<include refid="insertCommon" />
	</insert>

	<insert id="insertGetPk" parameterType="com.aten.model.orm.Appraisal">
		<selectKey resultType="String" order="BEFORE" keyProperty="appraisal_id">
			SELECT t_appraisal_sequence.Nextval from DUAL
		</selectKey>
		<include refid="insertCommon" />
	</insert>

	<!-- 更新数据区域 -->
	<sql id="update_clause">
		<set>
			<if test="appraisal_id != null"> appraisal_id = #{appraisal_id}, </if>
			<if test="appraisal_name != null"> appraisal_name = #{appraisal_name}, </if>
			<if test="the_area != null"> the_area = #{the_area}, </if>
			<if test="appraisal_contacts != null"> appraisal_contacts = #{appraisal_contacts}, </if>
			<if test="contacts_way != null"> contacts_way = #{contacts_way}, </if>
			<if test="sort_no != null"> sort_no = #{sort_no}, </if>
			<if test="state != null"> state = #{state}, </if>
			<if test="note != null"> note = #{note}, </if>
			<if test="create_time != null"> create_time = #{create_time} </if>

		</set>
	</sql>


	<update id="update" parameterType="com.aten.model.orm.Appraisal">
		UPDATE t_appraisal
		<include refid="update_clause" />
		WHERE appraisal_id = #{appraisal_id}
	</update>

	<!-- 删除数据区域 -->
	<delete id="delete" parameterType="String">
		delete from t_appraisal where appraisal_id in
		<foreach item="idItem" collection="array" index="index" open="("
			separator="," close=")">
			#{idItem}
		</foreach>
	</delete>

	<!-- 获取对象数据区域 -->
	<select id="get" parameterType="String" resultMap="resultAppraisal">
		SELECT
		t.appraisal_id,t.appraisal_name,t.the_area,t.appraisal_contacts,t.contacts_way,t.sort_no,t.state,t.note,t.create_time
		FROM t_appraisal t WHERE appraisal_id = #{appraisal_id}
	</select>

	<!-- 搜索数据区域 -->
	<sql id="where_clause">
		<where>
			1=1
			<if test="appraisal_id != null"> and t.appraisal_id = #{appraisal_id} </if>
			<if test="not_appraisal_id != null"> and t.appraisal_id != #{not_appraisal_id} </if>
			<if test="appraisal_name != null"> and t.appraisal_name = #{appraisal_name} </if>
			<if test="appraisal_name_vague != null"> and instr(appraisal_name,#{appraisal_name_vague})>0</if>
			<if test="the_area != null"> and t.the_area = #{the_area} </if>
			<if test="appraisal_contacts != null"> and t.appraisal_contacts = #{appraisal_contacts} </if>
			<if test="contacts_way != null"> and t.contacts_way = #{contacts_way} </if>
			<if test="sort_no != null"> and t.sort_no = #{sort_no} </if>
			<if test="state != null"> and t.state = #{state} </if>
			<if test="create_time != null"> and t.create_time = #{create_time} </if>

		</where>
	</sql>

	<sql id="getCommon">
		select
		t.appraisal_id,t.appraisal_name,t.the_area,t.appraisal_contacts,t.contacts_way,t.sort_no,t.state,t.note,t.create_time
		from t_appraisal t
		<include refid="where_clause" />
		order by sort_no desc
	</sql>



	<select id="getList" parameterType="map" resultMap="resultAppraisal">
		<include refid="getCommon" />
		<if test="start != null">
			LIMIT ${start},${limit}
		</if>
	</select>

	<select id="getCount" parameterType="map" resultType="int">
		select count(*) ct from t_appraisal t
		<include refid="where_clause" />
	</select>


	<!-- 排序区域 -->
	<update id="updateBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open=""
			close=";" separator=";">
			update t_appraisal
			<set>
				sort_no = #{item.sort_no}
			</set>
			WHERE appraisal_id = #{item.id}
		</foreach>
	</update>

	<select id="queryList" parameterType="map"
		resultType="com.aten.model.orm.Appraisal">
		select * from t_appraisal t
		<include refid="where_clause" />

		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	<select id="selectByCatId" parameterType="java.lang.String"
		resultType="com.aten.model.orm.Appraisal">
		select a.* from t_appraisal a
		left join t_cat_appraisal ca
		on a.appraisal_id=ca.appraisal_id
		where a.state=1 and ca.cat_id=#{id}
	</select>
</mapper>

