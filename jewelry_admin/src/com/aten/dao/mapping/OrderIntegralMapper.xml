<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.aten.dao.OrderIntegralDao">

	<!-- 数据库映射模型区域 -->
	<resultMap id="resultOrderIntegral" type="com.aten.model.orm.OrderIntegral">
		<result property="ex_id" column="ex_id" />
		<result property="order_number" column="order_number" />
		<result property="integral_goods_name" column="integral_goods_name" />
		<result property="exchange_time" column="exchange_time" />
		<result property="use_integral" column="use_integral" />
		<result property="account_id" column="account_id" />
		<result property="login_name" column="login_name" />
		<result property="integral_id" column="integral_id" />

	</resultMap>

	<!-- 新增数据区域 -->
	<sql id="insertCommon">
		INSERT INTO t_order_integral
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="ex_id != null"> ex_id,</if>
			<if test="order_number != null"> order_number,</if>
			<if test="integral_goods_name != null"> integral_goods_name,</if>
			<if test="exchange_time != null"> exchange_time,</if>
			<if test="use_integral != null"> use_integral,</if>
			<if test="account_id != null"> account_id,</if>
			<if test="login_name != null"> login_name,</if>
			<if test="integral_id != null"> integral_id</if>

		</trim>
		<trim prefix="VALUES (" suffix=")" suffixOverrides=",">
			<if test="ex_id != null">#{ex_id},</if>
			<if test="order_number != null">#{order_number},</if>
			<if test="integral_goods_name != null">#{integral_goods_name},</if>
			<if test="exchange_time != null">#{exchange_time},</if>
			<if test="use_integral != null">#{use_integral},</if>
			<if test="account_id != null">#{account_id},</if>
			<if test="login_name != null">#{login_name},</if>
			<if test="integral_id != null">#{integral_id}</if>

		</trim>
	</sql>

	<insert id="insert" parameterType="com.aten.model.orm.OrderIntegral">
		<include refid="insertCommon" />
	</insert>

	<insert id="insertGetPk" parameterType="com.aten.model.orm.OrderIntegral">
		<include refid="insertCommon" />
		<selectKey resultType="String" order="AFTER" keyProperty="ex_id">
			SELECT @@IDENTITY AS ID
		</selectKey>
	</insert>

	<!-- 更新数据区域 -->
	<sql id="update_clause">
		<set>
			<trim suffixOverrides=",">
				<if test="ex_id != null"> ex_id = #{ex_id}, </if>
				<if test="order_number != null"> order_number = #{order_number}, </if>
				<if test="integral_goods_name != null"> integral_goods_name = #{integral_goods_name}, </if>
				<if test="exchange_time != null"> exchange_time = #{exchange_time}, </if>
				<if test="use_integral != null"> use_integral = #{use_integral}, </if>
				<if test="account_id != null"> account_id = #{account_id}, </if>
				<if test="login_name != null"> login_name = #{login_name}, </if>
				<if test="integral_id != null"> integral_id = #{integral_id} </if>

			</trim>
		</set>
	</sql>





	<update id="update" parameterType="com.aten.model.orm.OrderIntegral">
		UPDATE t_order_integral
		<include refid="update_clause" />
		WHERE ex_id = #{ex_id}
	</update>

	<!-- 删除数据区域 -->
	<delete id="delete" parameterType="String">
		delete from t_order_integral where ex_id in
		<foreach item="idItem" collection="array" index="index" open="("
			separator="," close=")">
			#{idItem}
		</foreach>
	</delete>

	<!-- 获取对象数据区域 -->
	<select id="get" parameterType="String" resultMap="resultOrderIntegral">
		SELECT
		t.ex_id,t.order_number,t.integral_goods_name,t.exchange_time,t.use_integral,t.account_id,t.login_name,t.integral_id
		FROM t_order_integral t WHERE ex_id = #{ex_id}
	</select>

	<!-- 搜索数据区域 -->
	<sql id="where_clause">
		<where>
			1=1
			<if test="ex_id != null"> and t.ex_id = #{ex_id} </if>
			<if test="ex_id_vague != null"> and instr(t.ex_id,#{ex_id_vague})>0 </if>
			<if test="order_number != null"> and t.order_number = #{order_number} </if>
			<if test="order_number_vague != null"> and instr(t.order_number,#{order_number_vague})>0 </if>
			<if test="integral_goods_name != null"> and t.integral_goods_name = #{integral_goods_name} </if>
			<if test="integral_goods_name_vague != null"> and
				instr(t.integral_goods_name,#{integral_goods_name_vague})>0 </if>
			<if test="exchange_time != null"> and t.exchange_time = #{exchange_time} </if>
			<if test="exchange_time_vague != null"> and instr(t.exchange_time,#{exchange_time_vague})>0 </if>
			<if test="use_integral != null"> and t.use_integral = #{use_integral} </if>
			<if test="use_integral_vague != null"> and instr(t.use_integral,#{use_integral_vague})>0 </if>
			<if test="account_id != null"> and t.account_id = #{account_id} </if>
			<if test="account_id_vague != null"> and instr(t.account_id,#{account_id_vague})>0 </if>
			<if test="login_name != null"> and t.login_name = #{login_name} </if>
			<if test="login_name_vague != null"> and instr(t.login_name,#{login_name_vague})>0 </if>
			<if test="integral_id != null"> and t.integral_id = #{integral_id} </if>
			<if test="integral_id_vague != null"> and instr(t.integral_id#{integral_id_vague})>0 </if>
			<if test="push_time_start != null"> and DATE_FORMAT(t.exchange_time,'%Y-%m-%d')
				&gt;= DATE_FORMAT(#{push_time_start},'%Y-%m-%d') </if>
			<if test="push_time_end != null"> and DATE_FORMAT(t.exchange_time,'%Y-%m-%d')
				&lt;= DATE_FORMAT(#{push_time_end},'%Y-%m-%d') </if>
		</where>
	</sql>

	<sql id="getCommon">
		select
		t.ex_id,t.order_number,t.integral_goods_name,t.exchange_time,t.use_integral,t.account_id,t.login_name,t.integral_id
		from t_order_integral t
		<include refid="where_clause" />
		order by ex_id desc
	</sql>



	<select id="getList" parameterType="map" resultMap="resultOrderIntegral">
		<include refid="getCommon" />
		<if test="start != null">
			LIMIT ${start},${limit}
		</if>
	</select>

	<select id="getCount" parameterType="map" resultType="int">
		select count(*) ct from t_order_integral t
		<include refid="where_clause" />
	</select>


	<!-- 排序区域 -->
	<update id="updateBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index"
			separator=";">
			update t_order_integral
			<set>
				sort_no = #{item.sort_no}
			</set>
			WHERE ex_id = #{item.id}
		</foreach>
	</update>

</mapper>

